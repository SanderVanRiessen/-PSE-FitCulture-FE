image: docker:latest

services:
  - docker:dind

variables:
  DOCKER_DRIVER: overlay2

cache:
  key:
    files:
      - pnpm-lock.yaml
  paths:
    - node_modules/
    - .pnpm-store/

stages:
  - build
  - lint & test
  - sonar
  - docker-build
  - deploy

.install_pnpm:
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest --activate
    - pnpm config set store-dir .pnpm-store

build:
  stage: build
  extends: .install_pnpm
  script:
    - docker build -t your-docker-registry/your-image-name:tag .
    - docker push your-docker-registry/your-image-name:tag
  artifacts:
    expire_in: 3 days
    paths:
      - build/
      - node_modules/

quality:
  stage: lint & test
  needs: [build]
  extends: .install_pnpm
  script:
    - pnpm run lint

prettier:
  stage: lint & test
  needs: [build]
  extends: .install_pnpm
  script:
    - pnpm run prettier:check

test:
  stage: lint & test
  needs: [build]
  extends: .install_pnpm
  script:
    - pnpm run test

sonarcloud:
  stage: sonar
  needs: [build]
  extends: .install_pnpm
  variables:
    SONAR_SCANNER_OPTS: "-Xmx1024m"
  script:
    - sonar-scanner
  only:
    - merge_requests
    - master

docker-build:
  image: docker:latest
  stage: docker-build
  needs: [build]
  only:
    - main
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE .
    - docker push $CI_REGISTRY_IMAGE

deploy-job:
  stage: deploy
  needs: [build]
  image: ruby:2.7
  script:
    - apt-get update -qq && apt-get install -y curl git
    - curl https://cli-assets.heroku.com/install.sh | sh
    - export HEROKU_API_KEY="$HEROKU_PRODUCTION_KEY"
    - git config --global user.email "you@example.com"
    - git config --global user.name "GitLab CI/CD"
    - if ! git remote | grep -q heroku; then git remote add heroku https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git; fi
    - git fetch --unshallow || true
    - git push heroku HEAD:refs/heads/main --force
  only:
    - main
